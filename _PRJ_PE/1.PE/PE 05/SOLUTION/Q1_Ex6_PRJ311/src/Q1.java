
import static java.lang.Thread.sleep;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Tuan Anh
 */
public class Q1 extends javax.swing.JFrame {

    /**
     * Creates new form Q1
     *
     * @throws java.lang.InterruptedException
     */
    public Q1() throws InterruptedException {
        initComponents();
        
        Dog dog = new Dog();
        Clock clock = new Clock();
        Person person = new Person();
        
        start(dog, clock, person);
        //dog.start();
        //clock.start();
        //dog.join();
//        person.start();

    }
    
    public void start(Dog dog, Clock clock, Person person) throws InterruptedException{
        dog.start();
        clock.start();
        dog.join();
        clock.interrupt();
        person.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(75, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Q1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Q1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Q1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Q1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Q1().setVisible(true);
                } catch (InterruptedException ex) {
                    Logger.getLogger(Q1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    class Clock extends Thread {
        int count = 0;
        @Override
        public void run() {
            while (true) {
                Calendar cl = Calendar.getInstance();
                int hour = cl.get(Calendar.HOUR);
                int min = cl.get(Calendar.MINUTE);
                int second = cl.get(Calendar.SECOND);

                jTextArea1.append("Time : " + hour + ":" + min + ":" + second + "\n");
                count++;
                if(count >= 5) break;
                try {
                    sleep(1000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(Q1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    class Dog extends Thread {

        

        @Override
        public void run() {
            int count = 0;
            for (int i = 0; i < 5; i++) {
                jTextArea1.append("Dog : Watching, watching, watching\n");
                count++;
                try {
                    sleep(1000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(Q1.class.getName()).log(Level.SEVERE, null, ex);
                }
                if (i == 4) {
                    jTextArea1.append("Dog : Go Go Go\n");
                }
            }

        }
    }

    class Person extends Thread {

        @Override
        public void run() {
            int countRun = 10;
            jTextArea1.append("Person : Wow, big dog, run run run \n");
            for (int i = 0; i < 5; i++) {
                jTextArea1.append("Person : Run " + countRun + "\n");
                countRun += 10;
                try {
                    sleep(1000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(Q1.class.getName()).log(Level.SEVERE, null, ex);
                }
                if(countRun  == 60){
                    jTextArea1.append("Person : Stop");
                }
            }
           
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
