
import static java.lang.Thread.sleep;
import java.util.List;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Tuan Anh
 */
public class AShow extends javax.swing.JFrame {

    DefaultListModel model;
    Generate gen;
    Show show;

    /**
     * Creates new form AShow
     */
    public AShow() {
        initComponents();
        model = new DefaultListModel<>();
        jList1.setModel(model);
        gen = new Generate();
        show = new Show();
        gen.start();
        show.start();
    }

    class Generate extends Thread {

        volatile boolean isRun;

        public void execute() {
            isRun = true;
        }

        public void stopRun() {
            isRun = false;
        }

        @Override
        public void run() {
            while (true) {
                while (isRun) {
                    Random rd = new Random();
                    int temp = rd.nextInt(50);
                    jLabel1.setText("Generating number : " + temp);
                    model.addElement(temp);
                    try {
                        sleep(1000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(AShow.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }
    }

    class Show extends Thread {

        volatile boolean isRun;

        public void execute() {
            isRun = true;
        }

        public void stopRun() {
            isRun = false;
        }

        @Override
        public void run() {           
            while (true) {
                
                while (isRun ) {
                    jLabel1.setText("Number : ");
                    Object [] list = jList1.getSelectedValues();
                    
                    for(int i = 0; i< list.length; i++){
                        jLabel1.setText(jLabel1.getText() + list[i] + " ");
                        try {
                            sleep(1000);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(AShow.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        rdGen = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        rdShow = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Ready");

        buttonGroup1.add(rdGen);
        rdGen.setText("Generating");
        rdGen.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rdGenItemStateChanged(evt);
            }
        });
        rdGen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdGenActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jList1);

        buttonGroup1.add(rdShow);
        rdShow.setText("Showing");
        rdShow.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rdShowItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rdGen)
                            .addComponent(rdShow)))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(87, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(rdGen)
                        .addGap(18, 18, 18)
                        .addComponent(rdShow))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rdGenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdGenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdGenActionPerformed

    private void rdGenItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rdGenItemStateChanged
        // TODO add your handling code here:
        if (rdGen.isSelected()) {
            show.stopRun();
            gen.execute();

        } else {
            gen.stopRun();
            show.execute();
        }
    }//GEN-LAST:event_rdGenItemStateChanged

    private void rdShowItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rdShowItemStateChanged
        // TODO add your handling code here:
        if (!rdShow.isSelected()) {
            show.stopRun();
            gen.execute();

        } else {
            gen.stopRun();
            show.execute();
        }
    }//GEN-LAST:event_rdShowItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AShow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AShow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AShow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AShow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AShow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rdGen;
    private javax.swing.JRadioButton rdShow;
    // End of variables declaration//GEN-END:variables
}
